openapi: 3.0.0

info:
  version: 1.0.2
  title: Spark Works IoT Data Analytics API
  description: AP Interface for deployments of the SparkWorks IoT Data Analytics Platform
  contact:
    name: Spark Works Ltd
    url: 'https://www.sparkworks.net/'
    email: info@sparkworks.net

servers:
  - url: 'https://api.{deployment}.sparkworks.cloud/{version}'
    variables:
      deployment:
        default: demo
        description: Customer ID assigned
      version:
        default: v1
        description: API version
    description: deployment url

paths:
  '/group':
    get:
      tags:
        - Group API
      summary: Retrieve a list of the available groups
      description: Returns a paginated list of all groups in the deployment. Groups are used to organize and categorize Things (devices) in the platform. The response includes group attributes such as name, description, and any custom attributes defined.
      operationId: RegistryGroupsFunction
      security:
        - cognitoOAuth2: [ ]
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListDTO'
  '/group/{groupId}':
    get:
      tags:
        - Group API
      summary: Retrieve the data for a group by its id
      description: Retrieve the latest values received from a single device and its stored description. The response contains the latest values received from the device, as well as all the properties stored in the platform for this specific device.
      operationId: RegistryGroupFunction
      parameters:
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDTO'
  '/group/{groupId}/thing':
    get:
      tags:
        - Group API
      summary: Retrieve a list of Things for a Group by its id
      description: Returns a list of all Things (devices) that belong to the specified group. Each Thing includes its current status, last update timestamp, latest sensor values, and configured attributes.
      operationId: RegistryGroupThingsFunction
      parameters:
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThingListDTO'

  '/thing':
    get:
      tags:
        - Thing API
      summary: Retrieve a list of Things
      description: Returns a paginated list of all Things (devices) across all groups in the deployment. Each Thing entry includes its group association, type, status, last update time, latest sensor values, and configured attributes.
      operationId: RegistryThingsFunction
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThingListDTO'

  '/search/thing':
    post:
      tags:
        - Thing API
      summary: Search for Things based on attributes
      description: Allows searching for Things based on their attribute values. Supports exact matches and wildcard patterns (using *) for attribute values. The search is performed across all groups and returns matching Things with their complete details.
      operationId: RegistrySearchThingsFunction
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchThingRequestDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThingListDTO'

  '/group/{groupId}/thing/{thingId}':
    get:
      tags:
        - Thing API
      summary: Retrieve the data for a Thing by its id and Group id
      description: Retrieve the latest values received from a single device and its stored description. The response contains the latest values received from the device, as well as all the properties stored in the platform for this specific device.
      operationId: RegistryGroupThingFunction
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThingDTO'

  '/group/{groupId}/thing/{thingId}/{measure}/query/timerange':
    post:
      tags:
        - Thing API
      summary: Retrieve raw measurement data for a Thing
      description: Retrieves raw measurement data for a specific Thing and measure type within a given time range. Returns timestamp-value pairs for all measurements recorded during the specified period. Supports pagination for large datasets.
      operationId: queryRaw
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
        - $ref: '#/components/parameters/measure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRangeRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeRangeResultDTO'

  '/group/{groupId}/thing/{thingId}/{measure}/query':
    post:
      tags:
        - Thing API
      summary: Query Thing data with advanced filtering
      description: Advanced query endpoint that supports both temporal and spatial filtering of Thing measurements. Can return raw data or aggregated results based on the specified time interval and aggregation method. Supports querying single or multiple measures, and filtering by location bounds.
      operationId: query
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
        - $ref: '#/components/parameters/measure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataQueryRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataQueryResultDTO'

  '/group/{groupId}/thing/{thingId}/distance':
    post:
      tags:
        - Thing API
      summary: Calculate distance traveled by a Thing
      description: Calculates the total distance traveled by a Thing based on its recorded location measurements within a specified time range. Returns the total distance in kilometers and optionally includes the location measurements used for the calculation.
      operationId: queryDistance
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRangeRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistanceResultDTO'

  '/group/{groupId}/thing/{thingId}/{measure}/query/timerange/summary':
    post:
      tags:
        - Thing API
      summary: Retrieve raw data for a single Thing
      description: Retrieve all data for the given measure and device on a specific interval. The response contains all the raw data received from the device in the given from-to period.
      operationId: queryAggregated
      parameters:
        - $ref: '#/components/parameters/perPageParam'
        - $ref: '#/components/parameters/pageKey'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
        - $ref: '#/components/parameters/measure'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupedTimeRangeRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupedTimeRangeResultDTO'

  '/group/{groupId}/attribute':
    post:
      tags:
        - Group API
      summary: Update attributes of a Group
      description: Add or replace attributes of a Group. If a value is null, the attribute will be removed
      operationId: RegistryGroupAttributesUpdateFunction
      parameters:
        - $ref: '#/components/parameters/groupId'
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: 'somename'
                description: 'somedescription'
                attr3: 'hello'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDTO'

  '/group/{groupId}/thing/{thingId}/attribute':
    post:
      tags:
        - Thing API
      summary: Update Thing attributes
      description: Updates or removes attributes for a specific Thing. To update an attribute, provide the attribute name and new value. To remove an attribute, set its value to null. Common attributes include 'name' and 'description', but custom attributes can also be defined.
      operationId: RegistryThingAttributesUpdateFunction
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/thingId'
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: 'somename'
                description: 'somedescription'
                attr3: 'hello'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThingDTO'

components:
  securitySchemes:
    'AMBITIOUS Authentication':
      type: oauth2
      flows:
        implicit: # Use "implicit" flow if no backend involved
          authorizationUrl: https://sparks-datalake-ambitious.auth.eu-west-1.amazoncognito.com/oauth2/authorize
          scopes:
            openid: Access OpenID Connect
            profile: Access user profile
            email: Access email information
    'SCC Authentication':
      type: oauth2
      flows:
        implicit: # Use "implicit" flow if no backend involved
          authorizationUrl: https://sparks-datalake-scc.auth.eu-west-1.amazoncognito.com/oauth2/authorize
          scopes:
            openid: Access OpenID Connect
            profile: Access user profile
            email: Access email information
  parameters:
    perPageParam:
      in: query
      name: perPage
      required: false
      schema:
        type: integer
        minimum: 20
        maximum: 100
        default: 20
      description: The number of results per page to return.
    pageKey:
      in: query
      name: pageKey
      required: false
      schema:
        type: string
      description: The index to the next page of entities.
    device:
      in: query
      name: device
      required: false
      schema:
        type: string
        example: 'ea707af9de8b4357'
      description: List of device names to filter data for, separated by commas.
    tenant:
      in: query
      name: tenant
      required: false
      schema:
        type: string
        example: 'wellics'
      description: Tenant name to filter data for.
    space:
      in: query
      name: space
      required: false
      schema:
        type: string
        example: 'office'
      description: Space name to filter data for.
    groupId:
      in: path
      name: groupId
      description: The id of the group
      required: true
      schema:
        type: string
    thingId:
      in: path
      name: thingId
      description: The id of the Thing
      required: true
      schema:
        type: string
    measure:
      in: path
      name: measure
      description: The measure to query data for
      required: true
      schema:
        type: string
        format: device
      examples:
        all:
          value: 'all'
          summary: 'All measurements'
        temperature:
          value: 'temperature'
          summary: 'Temperature measurement'
        humidity:
          value: 'humidity'
          summary: 'Humidity measurement'
        noise:
          value: 'noise'
          summary: 'Noise measurement'
        illuminance:
          value: 'illuminance'
          summary: 'Illuminance measurement'
        weight:
          value: 'weight'
          summary: 'Weight measurement'
        other:
          value: 'custom-measure-name'
          summary: 'Custom measurement (replace with your own value)'

  schemas:
    ThingId:
      title: The id of the Thing
      type: string
      description: The id of the Thing
      format: device
      example: 'ea707af9de8b4357'
    TypeName:
      title: The type of the device
      type: string
      description: The type of the device
      format: type_name
      example: 'someTypeName'
    Status:
      title: The current status of the device, based on lastUpdate
      type: string
      description: Indication of whether a sensor device has stopped transmitting measurements
      format: status
      enum: [ 'ONLINE', 'OFFLINE' ]
    LastUpdate:
      type: integer
      format: int64
      example: 1613225568858
    LastSensorValues:
      title: Holder object with the device values
      type: object
      properties:
        measure:
          title: Measure name
          type: string
          format: measure
        value:
          title: Measured value
          type: string
          format: value
      example:
        temperature: 23.5
        humidity: 43
        illuminance: 46
        noise: 2
    SensorUnits:
      title: Holder object with the device units
      type: object
      properties:
        measure:
          title: Measure name
          type: string
          format: measure
        unit:
          title: Measured unit
          type: string
          format: unit
      example:
        temperature: '°C'
        humidity: '%'
        illuminance: 'lux'
        noise: 'raw'

    FromTimestamp:
      title: The UNIX timestamp of the start date for filtering
      type: integer
      description: The UNIX timestamp of the start date for filtering
      format: int64
      example: 1613225568858
    ToTimestamp:
      title: The UNIX timestamp of the end date for filtering
      type: integer
      description: The UNIX timestamp of the end date for filtering
      format: int64
      example: 1613325578858
    Interval:
      title: The interval to group the data
      type: string
      description: The interval to group the data
      format: string
      example: 1d
    Method:
      title: The method to aggregate the data
      type: string
      description: The method to aggregate the data
      format: string
      enum: [ 'AVG','COUNT','SUM','MIN','MAX','FIRST_VALUE','LAST_VALUE','STDDEV','VARIANCE' ]

    Measure:
      title: The name of the measurement
      type: string
      description: The name of the measurement
      format: measure
      examples:
        all:
          value: 'all'
          summary: 'All measurements'
        temperature:
          value: 'temperature'
          summary: 'Temperature measurement'
        humidity:
          value: 'humidity'
          summary: 'Humidity measurement'
        noise:
          value: 'noise'
          summary: 'Noise measurement'
        illuminance:
          value: 'illuminance'
          summary: 'Illuminance measurement'

    MetadataDTO:
      title: MetadataDTO API Model
      type: object
      properties:
        perPage:
          title: Number of results per page
          type: number
          format: int64
          example: 20
        nextPageKey:
          title: Key to access the next page of data
          type: string
          format: string
          example: 'AQJp....zteQ=='
        currentPageKey:
          title: Key of the requested page
          type: string
          format: string
          example: 'ADJp....zteD=='

    GroupListDTO:
      title: GroupListDTO API Model
      type: object
      description: List of the devices
      properties:
        _metadata:
          title: Metadata
          description: Pagination metadata
          type: array
          items:
            $ref: '#/components/schemas/MetadataDTO'
        groups:
          title: Device data
          type: array
          description: Array of the devices
          items:
            $ref: '#/components/schemas/GroupDTO'
    GroupDTO:
      title: GroupDTO API Model
      type: object
      description: Group data object
      properties:
        group:
          title: The name of the group
          type: string
          description: Indication of whether a sensor device has stopped transmitting measurements
        attributes:
          $ref: '#/components/schemas/GroupAttributesDTO'
    GroupAttributesDTO:
      title: GroupAttributesDTO API Model
      description: Group attributes
      type: object
      properties:
        name:
          type: string
          example: group-name
        description:
          type: string
          example: some description
        attr3:
          type: string
          format: attr3
          example: hello
    ThingListDTO:
      title: ThingListDTO API Model
      type: object
      description: List of Things
      properties:
        _metadata:
          title: Metadata
          description: Pagination metadata
          type: array
          items:
            $ref: '#/components/schemas/MetadataDTO'
        things:
          title: Things data
          type: array
          description: Array of the Things
          items:
            $ref: '#/components/schemas/ThingDTO'

    ThingDTO:
      title: ThingDTO API Model
      type: object
      description: Thing data object
      properties:
        group:
          title: The name of the group
          type: string
          description: Indication of whether a sensor device has stopped transmitting measurements
          example: 'groupId'
        thing:
          $ref: '#/components/schemas/ThingId'
        typeName:
          $ref: '#/components/schemas/TypeName'
        status:
          $ref: '#/components/schemas/Status'
        attributes:
          $ref: '#/components/schemas/ThingAttributesDTO'
        lastUpdate:
          $ref: '#/components/schemas/LastUpdate'
        lastSensorValues:
          $ref: '#/components/schemas/LastSensorValues'
        sensorUnits:
          $ref: '#/components/schemas/SensorUnits'

    ThingAttributesDTO:
      title: ThingAttributesDTO API Model
      description: Thing attributes
      type: object
      properties:
        name:
          type: string
          example: somename
        attr2:
          type: string
          format: attr2
          example: hello

    SearchThingRequestDTO:
      title: SearchThingRequestDTO API Model
      description: Search criteria
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/SearchThingRequestAttributesDTO'

    SearchThingRequestAttributesDTO:
      title: SearchThingRequestAttributesDTO API Model
      description: Attributes criteria
      required:
        - attribute1Name
      type: object
      properties:
        attribute1Name:
          title: attribute1Name
          type: string
          description: attribute1Name
          format: string
          example: attribute1Value
        attribute2Name:
          title: attribute2Name
          type: string
          description: attribute2Name
          format: string
          example: attribute2V*

    TimeRangeRequestDTO:
      title: TimeRangeRequestDTO API Model
      description: Timerange criteria
      required:
        - from
        - to
      type: object
      properties:
        from:
          $ref: '#/components/schemas/FromTimestamp'
        to:
          $ref: '#/components/schemas/ToTimestamp'

    GroupedTimeRangeRequestDTO:
      title: GroupedTimeRangeRequestDTO API Model
      description: Timerange criteria
      required:
        - from
        - to
        - interval
      type: object
      properties:
        from:
          $ref: '#/components/schemas/FromTimestamp'
        to:
          $ref: '#/components/schemas/ToTimestamp'
        interval:
          $ref: '#/components/schemas/Interval'
        method:
          $ref: '#/components/schemas/Method'

    TimeRangeResultDTO:
      title: TimeRangeResultDTO API Model
      description: Data query response
      required:
        - thing
        - measure
        - query.from
        - query.to
        - data
      type: object
      properties:
        _metadata:
          title: Metadata
          description: Pagination metadata
          type: array
          items:
            $ref: '#/components/schemas/MetadataDTO'
        thing:
          $ref: '#/components/schemas/ThingId'
        measure:
          $ref: '#/components/schemas/Measure'
        query:
          $ref: '#/components/schemas/TimeRangeRequestDTO'
        data:
          $ref: '#/components/schemas/MeasurementsDTO'

    DataQueryResultDTO:
      title: DataQueryResultDTO API Model
      description: Data query response
      required:
        - thing
        - measure
        - query.from
        - query.to
        - data
      type: object
      properties:
        _metadata:
          title: Metadata
          description: Pagination metadata
          type: array
          items:
            $ref: '#/components/schemas/MetadataDTO'
        thing:
          $ref: '#/components/schemas/ThingId'
        measure:
          $ref: '#/components/schemas/Measure'
        query:
          $ref: '#/components/schemas/DataQueryRequestDTO'
        data:
          $ref: '#/components/schemas/MeasurementsDTO'

    DistanceResultDTO:
      title: DistanceResultDTO API Model
      description: Distance query response
      required:
        - thing
        - distance
      type: object
      properties:
        thing:
          $ref: '#/components/schemas/ThingId'
        query:
          $ref: '#/components/schemas/TimeRangeRequestDTO'
        distance:
          title: The distance value
          type: number
          description: The value of the distance between the all measurement's locations in kilometers (km)
          format: double
          example: 420.4
        data:
          $ref: '#/components/schemas/DistanceMeasurementsDTO'

    GroupedTimeRangeResultDTO:
      title: GroupedTimeRangeResultDTO API Model
      description: Data query response
      required:
        - thing
        - measure
        - query.from
        - query.to
        - data
      type: object
      properties:
        _metadata:
          title: Metadata
          description: Pagination metadata
          type: array
          items:
            $ref: '#/components/schemas/MetadataDTO'
        thing:
          $ref: '#/components/schemas/ThingId'
        measure:
          $ref: '#/components/schemas/Measure'
        query:
          $ref: '#/components/schemas/GroupedTimeRangeRequestDTO'
        data:
          $ref: '#/components/schemas/MeasurementsDTO'

    MeasurementsDTO:
      title: MeasurementsDTO API Model
      description: The API Model describing the measurements stored in the platform
      type: object
      properties:
        temperature:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: double
          example:
            - timestamp: 1613225568858
              value: 23.2
        humidity:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: double
          example:
            - timestamp: 1613225568859
              value: 30.7
        noise:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: double
          example:
            - timestamp: 1613225568858
              value: 2.7
        illuminance:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
                example: 1613225568859
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: integer
                example: 500
          example:
            - timestamp: 1613225568859
              value: 500

    DistanceMeasurementsDTO:
      title: DistanceMeasurementsDTO API Model
      description: The API Model describing the distance calculated from measurements stored in the platform API Model
      type: object
      properties:
        longitude:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: double
          example:
            - timestamp: 1613225568858
              value: 21.73565
            - timestamp: 1613225868858
              value: 26.538339
        latitude:
          type: array
          items:
            type: object
            properties:
              timestamp:
                title: The UNIX timestamp of the received measurement
                type: integer
                description: The UNIX timestamp of the Date when measurement was collected as provided by the device
                format: int64
              value:
                title: The value of the measurement
                type: number
                description: The value of the measurement
                format: double
          example:
            - timestamp: 1613225568858
              value: 38.2483863
            - timestamp: 1613225868858
              value: 38.061125
#        distance:
#          type: array
#          items:
#            type: object
#            properties:
#              timestamp_1:
#                title: Origin measurement UNIX timestamp
#                type: integer
#                description: The UNIX timestamp of the Date when measurement of the origin location was received
#                format: int64
#                example: 1613225568858
#              latitude_1:
#                title: Origin measurement latitude
#                type: number
#                description: The latitude when measurement of the origin location was received
#                format: int64
#                example: 38.2483863
#              longitude_1:
#                title: Origin measurement longitude
#                type: number
#                description: The longitude when measurement of the origin location was received
#                format: int64
#                example: 21.73565
#              timestamp_2:
#                title: Destination measurement UNIX timestamp
#                type: integer
#                description: The UNIX timestamp of the Date when measurement of the destination location was received
#                format: int64
#                example: 1613225868858
#              latitude_2:
#                title: Destination measurement latitude
#                type: number
#                description: The latitude when measurement of the origin location was received
#                format: int64
#                example: 38.061125
#              longitude_2:
#                title: Destination measurement longitude
#                type: number
#                description: The longitude when measurement of the origin location was received
#                format: int64
#                example: 26.538339
#              value:
#                title: The distance value
#                type: number
#                description: The value of the distance between the two measurement's locations in kilometers (km)
#                format: double
#                example: 420.4

    DataQueryRequestDTO:
      title: DataQueryRequestDTO API Model
      description: Data Query criteria
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/TimeRangeRequestDTO'
        location:
          type: array
          description: >
            An array of LinearRings. The first is the exterior ring; any others are holes.
            Each ring must be a closed array of at least 4 coordinate pairs.
          items:
            type: array
            minItems: 2
            maxItems: 2
            items:
              type: number
          minItems: 3
          example: [ [ 100.0, 0.0 ], [ 101.0, 0.0 ], [ 101.0, 1.0 ], [ 100.0, 1.0 ], [ 100.0, 0.0 ] ]
        interval:
          $ref: '#/components/schemas/Interval'
        method:
          $ref: '#/components/schemas/Method'
